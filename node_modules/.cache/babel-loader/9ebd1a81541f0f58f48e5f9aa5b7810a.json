{"ast":null,"code":"import _slicedToArray from\"/Users/almiraputrisandy/Desktop/GitHub Repositories/pokemon-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useLazyQuery}from'@apollo/client';import{GET_POKEMON_DETAILS}from'../graphql/graphqlScript';import{Button}from'react-bootstrap';import PokemonDetails from'./PokemonDetails';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var details,ownedTotal;function Pokemon(props){//Lazy Query to execute only after \"See Pokemon Details\" button is clicked\nvar _useLazyQuery=useLazyQuery(GET_POKEMON_DETAILS,{variables:{\"name\":props.pokemon.name}}),_useLazyQuery2=_slicedToArray(_useLazyQuery,2),getDetails=_useLazyQuery2[0],_useLazyQuery2$=_useLazyQuery2[1],loading=_useLazyQuery2$.loading,error=_useLazyQuery2$.error,data=_useLazyQuery2$.data;if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});if(error)return/*#__PURE__*/_jsx(\"p\",{children:\"Error :(\"});if(data){details=JSON.parse(JSON.stringify(data.pokemon));details.image=props.pokemon.image;return/*#__PURE__*/_jsx(PokemonDetails,{pDetails:details},details.id);}var pokemonsList=JSON.parse(window.localStorage.getItem(\"myPokemons\"));//Get list of caught pokemon\nif(pokemonsList!=null){ownedTotal=pokemonsList.filter(function(n){return n.name===props.pokemon.name;}).length;//Count total of owned pokemons\n}else{ownedTotal=0;}return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'3%',paddingTop:'0'},children:[/*#__PURE__*/_jsx(\"h1\",{children:props.pokemon.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Owned Total: \",ownedTotal,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"img\",{src:props.pokemon.image,alt:\"pokemon\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){return getDetails();},children:\"See Pokemon Details\"})]},props.pokemon.name);};export default Pokemon;","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/pokemon-app/src/components/Pokemon.js"],"names":["React","useLazyQuery","GET_POKEMON_DETAILS","Button","PokemonDetails","details","ownedTotal","Pokemon","props","variables","pokemon","name","getDetails","loading","error","data","JSON","parse","stringify","image","id","pokemonsList","window","localStorage","getItem","filter","n","length","textAlign","padding","paddingTop"],"mappings":"sLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,MAAT,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,wFAEA,GAAIC,CAAAA,OAAJ,CAAaC,UAAb,CAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAuB,CACnB;AADmB,kBAE4BP,YAAY,CAACC,mBAAD,CAAsB,CAACO,SAAS,CAAC,CAAC,OAAOD,KAAK,CAACE,OAAN,CAAcC,IAAtB,CAAX,CAAtB,CAFxC,gDAEZC,UAFY,qDAEEC,OAFF,iBAEEA,OAFF,CAEWC,KAFX,iBAEWA,KAFX,CAEkBC,IAFlB,iBAEkBA,IAFlB,CAGnB,GAAIF,OAAJ,CAAa,mBAAO,iCAAP,CACb,GAAIC,KAAJ,CAAW,mBAAO,+BAAP,CACX,GAAIC,IAAJ,CAAS,CACLV,OAAO,CAAGW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAI,CAACL,OAApB,CAAX,CAAV,CACAL,OAAO,CAACc,KAAR,CAAgBX,KAAK,CAACE,OAAN,CAAcS,KAA9B,CACA,mBACI,KAAC,cAAD,EAAgB,QAAQ,CAAEd,OAA1B,EAAwCA,OAAO,CAACe,EAAhD,CADJ,CAGH,CAED,GAAIC,CAAAA,YAAY,CAAGL,IAAI,CAACC,KAAL,CAAWK,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAX,CAAnB,CAA0E;AAC1E,GAAIH,YAAY,EAAE,IAAlB,CAAuB,CACnBf,UAAU,CAAGe,YAAY,CAACI,MAAb,CAAoB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACf,IAAF,GAAWH,KAAK,CAACE,OAAN,CAAcC,IAA7B,EAArB,EAAwDgB,MAArE,CAA6E;AAChF,CAFD,IAEK,CACDrB,UAAU,CAAG,CAAb,CACH,CAGD,mBACI,aAA8B,KAAK,CAAE,CAAEsB,SAAS,CAAE,QAAb,CAAuBC,OAAO,CAAE,IAAhC,CAAsCC,UAAU,CAAE,GAAlD,CAArC,wBACI,oBACKtB,KAAK,CAACE,OAAN,CAAcC,IADnB,EADJ,cAII,qCACkBL,UADlB,cAEI,aAFJ,cAGI,YAAK,GAAG,CAAEE,KAAK,CAACE,OAAN,CAAcS,KAAxB,CAA+B,GAAG,CAAC,SAAnC,EAHJ,GAJJ,cASI,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAE,yBAAMP,CAAAA,UAAU,EAAhB,EAAnC,iCATJ,GAAUJ,KAAK,CAACE,OAAN,CAAcC,IAAxB,CADJ,CAaH,EACD,cAAeJ,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_POKEMON_DETAILS } from '../graphql/graphqlScript';\nimport { Button } from 'react-bootstrap';\nimport PokemonDetails from './PokemonDetails';\n\nvar details, ownedTotal;\n\nfunction Pokemon(props){\n    //Lazy Query to execute only after \"See Pokemon Details\" button is clicked\n    const [getDetails, { loading, error, data }] = useLazyQuery(GET_POKEMON_DETAILS, {variables:{\"name\":props.pokemon.name}});\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    if (data){\n        details = JSON.parse(JSON.stringify(data.pokemon));\n        details.image = props.pokemon.image;\n        return(\n            <PokemonDetails pDetails={details} key={details.id}/>\n        );\n    }\n\n    var pokemonsList = JSON.parse(window.localStorage.getItem(\"myPokemons\")); //Get list of caught pokemon\n    if (pokemonsList!=null){\n        ownedTotal = pokemonsList.filter(n => n.name === props.pokemon.name).length; //Count total of owned pokemons\n    }else{\n        ownedTotal = 0;\n    }\n    \n\n    return(\n        <div key={props.pokemon.name} style={{ textAlign: 'center', padding: '3%', paddingTop: '0'}}>\n            <h1>\n                {props.pokemon.name} \n            </h1>\n            <p>\n                Owned Total: {ownedTotal}\n                <br/>\n                <img src={props.pokemon.image} alt=\"pokemon\"></img>\n            </p>\n            <Button variant=\"primary\" onClick={() => getDetails()}>See Pokemon Details</Button>\n        </div>\n    );\n};\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}