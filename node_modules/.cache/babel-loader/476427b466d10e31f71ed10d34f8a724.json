{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/Courses.js\";\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Courses() {\n  /*#__PURE__*/\n  _jsxDEV(Query, {\n    query: gql`\n        query GetRates {\n            rates(currency: \"USD\") {\n            currency\n            }\n        }\n    `,\n    children: ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 32\n      }, this);\n      if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 30\n      }, this);\n      return data.allCourses.map(function (id, title, author, description, topic, url) {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${title} by ${author}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this);\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Courses;\n;\nexport default Courses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/Courses.js"],"names":["React","Query","gql","Courses","loading","error","data","allCourses","map","id","title","author","description","topic","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;;AAEA,SAASC,OAAT,GAAmB;AACf;AAAA,UAAC,KAAD;AAAO,IAAA,KAAK,EAAED,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,KANI;AAAA,cAOK,CAAC;AAACE,MAAAA,OAAD;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,KAAD,KAA4B;AACzB,UAAGF,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACZ,UAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACV,aAAOC,IAAI,CAACC,UAAL,CAAgBC,GAAhB,CAAoB,UAASC,EAAT,EAAaC,KAAb,EAAoBC,MAApB,EAA4BC,WAA5B,EAAyCC,KAAzC,EAAgDC,GAAhD,EAAoD;AAC3E;AAAA;AAAA,iCACI;AAAA,sBAAK,GAAEJ,KAAM,OAAMC,MAAO;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUF,EAAV;AAAA;AAAA;AAAA;AAAA;AAGH,OAJM,CAAP;AAKH;AAfL;AAAA;AAAA;AAAA;AAAA;AAiBH;;KAlBQN,O;AAkBR;AAED,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nfunction Courses() {\n    <Query query={gql`\n        query GetRates {\n            rates(currency: \"USD\") {\n            currency\n            }\n        }\n    `}>\n        {({loading, error, data}) => {\n            if(loading) return <p>Loading...</p>;\n            if(error) return <p>Error</p>\n            return data.allCourses.map(function(id, title, author, description, topic, url){\n                <div key={id}>\n                    <p>{`${title} by ${author}`}</p>\n                </div>\n            });\n        }}\n    </Query>\n};\n\nexport default Courses;"]},"metadata":{},"sourceType":"module"}