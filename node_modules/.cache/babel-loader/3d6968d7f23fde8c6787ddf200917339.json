{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/pokemonDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_POKEMON_DETAILS } from './graphql/graphqlScript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var details;\nexport function PokemonDetails({\n  data\n}, pokemonDetails) {\n  // const pokeName = name;\n  // const { loading, error, data } = useQuery(GET_POKEMON_DETAILS, {\n  //   variables : {name}, \n  // });\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error :(</p>;\n  return console.log({\n    data\n  }) //   <div>\n  //       <p>{pokemonDetails}</p>\n  //   </div>\n  ;\n}\n_c = PokemonDetails;\n;\nexport function Pokemon(props) {\n  _s();\n\n  const [active, setActive] = useState(\"pokeList\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POKEMON_DETAILS, {\n    variables: {\n      \"name\": props.pokemon.name\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  details = JSON.parse(JSON.stringify(data.pokemon));\n  details.image = props.pokemon.image;\n  console.log(details);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: e => PokemonDetails(details, e),\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.pokemon.name, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.pokemon.image,\n        alt: \"pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, props.pokemon.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Pokemon, \"TonF31Y7AdgdAHHvGfL6bf1Pmn4=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Pokemon;\n; //export default Pokemon;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PokemonDetails\");\n$RefreshReg$(_c2, \"Pokemon\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/pokemonDetails.js"],"names":["React","useState","useQuery","GET_POKEMON_DETAILS","details","PokemonDetails","data","pokemonDetails","console","log","Pokemon","props","active","setActive","loading","error","variables","pokemon","name","JSON","parse","stringify","image","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,mBAAT,QAAoC,yBAApC;;AAEA,OAAO,IAAIC,OAAJ;AAEP,OAAO,SAASC,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAgCC,cAAhC,EAA+C;AAClD;AACA;AACA;AACA;AACA;AACA;AAEA,SACAC,OAAO,CAACC,GAAR,CAAY;AAACH,IAAAA;AAAD,GAAZ,CADA,CAEA;AACA;AACA;AAJA;AAMH;KAdeD,c;AAcf;AAED,OAAO,SAASK,OAAT,CAAiBC,KAAjB,EAAuB;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,UAAD,CAApC;AACA,QAAM;AAAEa,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBT,IAAAA;AAAlB,MAA2BJ,QAAQ,CAACC,mBAAD,EAAsB;AAACa,IAAAA,SAAS,EAAC;AAAC,cAAOL,KAAK,CAACM,OAAN,CAAcC;AAAtB;AAAX,GAAtB,CAAzC;AACA,MAAIJ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXX,EAAAA,OAAO,GAAGe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAef,IAAI,CAACW,OAApB,CAAX,CAAV;AACAb,EAAAA,OAAO,CAACkB,KAAR,GAAgBX,KAAK,CAACM,OAAN,CAAcK,KAA9B;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAEA,sBACI;AAA8B,IAAA,OAAO,EAAGY,CAAD,IAAOlB,cAAc,CAACD,OAAD,EAAUmB,CAAV,CAA5D;AAAA,2BACI;AAAA,iBACKZ,KAAK,CAACM,OAAN,CAAcC,IADnB,oBACyB;AAAK,QAAA,GAAG,EAAEP,KAAK,CAACM,OAAN,CAAcK,KAAxB;AAA+B,QAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUX,KAAK,CAACM,OAAN,CAAcC,IAAxB;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAjBeR,O;UAEqBR,Q;;;MAFrBQ,O;AAiBf,C,CACD","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_POKEMON_DETAILS } from './graphql/graphqlScript';\n\nexport var details;\n\nexport function PokemonDetails({data}, pokemonDetails){\n    // const pokeName = name;\n    // const { loading, error, data } = useQuery(GET_POKEMON_DETAILS, {\n    //   variables : {name}, \n    // });\n    // if (loading) return <p>Loading...</p>;\n    // if (error) return <p>Error :(</p>;\n  \n    return (\n    console.log({data})\n    //   <div>\n    //       <p>{pokemonDetails}</p>\n    //   </div>\n    );\n};\n\nexport function Pokemon(props){\n    const [active, setActive] = useState(\"pokeList\");\n    const { loading, error, data } = useQuery(GET_POKEMON_DETAILS, {variables:{\"name\":props.pokemon.name}});\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    details = JSON.parse(JSON.stringify(data.pokemon));\n    details.image = props.pokemon.image;\n    console.log(details);\n    console.log(props);\n\n    return(\n        <div key={props.pokemon.name} onClick={(e) => PokemonDetails(details, e)}>\n            <p>\n                {props.pokemon.name} <img src={props.pokemon.image} alt=\"pokemon\"></img>\n            </p>\n        </div>\n    );\n};\n//export default Pokemon;"]},"metadata":{},"sourceType":"module"}