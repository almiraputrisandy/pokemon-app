{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/pokemonList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport Pokemon from './pokemonDetails';\nimport { GET_POKEMONS } from './graphql/graphqlScript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pokemons({\n  onPokemonSelected\n}) {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POKEMONS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }, this);\n  console.log(data); // return (\n  //   <div>\n  //     {data.pokemons.results.map(pokemon => (\n  //       <p key={pokemon.name}>\n  //         {pokemon.name} <img src={pokemon.image} alt=\"pokemon\"></img>\n  //       </p>\n  //     ))}\n  //   </div>\n  // );\n  // return data.pokemons.results.map((currentPokemon) => (\n  //   <Pokemon pokemon={currentPokemon} key={currentPokemon.url}/>\n  // ));\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    name: \"pokemon\",\n    onChange: onPokemonSelected,\n    children: data.pokemons.results.map(pokemon => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: pokemon.name,\n      children: pokemon.name\n    }, pokemon.url, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pokemons, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Pokemons;\nexport default Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/pokemonList.js"],"names":["React","useQuery","Pokemon","GET_POKEMONS","Pokemons","onPokemonSelected","loading","error","data","console","log","pokemons","results","map","pokemon","name","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;AAGA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAuC;AAAA;;AACrC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,YAAD,CAAzC;AAEA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EALqC,CAQrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAEH,iBAAjC;AAAA,cACGG,IAAI,CAACG,QAAL,CAAcC,OAAd,CAAsBC,GAAtB,CAA0BC,OAAO,iBAChC;AAA0B,MAAA,KAAK,EAAEA,OAAO,CAACC,IAAzC;AAAA,gBACGD,OAAO,CAACC;AADX,OAAaD,OAAO,CAACE,GAArB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA/BQZ,Q;UAC0BH,Q;;;KAD1BG,Q;AAiCT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport Pokemon from './pokemonDetails';\nimport { GET_POKEMONS } from './graphql/graphqlScript';\n\n\nfunction Pokemons({onPokemonSelected}) {\n  const { loading, error, data } = useQuery(GET_POKEMONS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  console.log(data);\n  \n\n  // return (\n  //   <div>\n  //     {data.pokemons.results.map(pokemon => (\n  //       <p key={pokemon.name}>\n  //         {pokemon.name} <img src={pokemon.image} alt=\"pokemon\"></img>\n  //       </p>\n  //     ))}\n  //   </div>\n  // );\n\n  // return data.pokemons.results.map((currentPokemon) => (\n  //   <Pokemon pokemon={currentPokemon} key={currentPokemon.url}/>\n  // ));\n\n  return (\n    <select name=\"pokemon\" onChange={onPokemonSelected}>\n      {data.pokemons.results.map(pokemon => (\n        <option key={pokemon.url} value={pokemon.name}>\n          {pokemon.name}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default Pokemons;"]},"metadata":{},"sourceType":"module"}