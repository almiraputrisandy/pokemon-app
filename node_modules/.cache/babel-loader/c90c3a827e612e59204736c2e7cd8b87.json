{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_POKEMON_DETAILS } from './graphql/graphqlScript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var details;\nvar caughtPokemons = [];\n\nfunction Probability(n) {\n  return Math.floor(Math.random() * Math.floor(n));\n}\n\n_c = Probability;\n;\n\nfunction CatchPokemon(props) {\n  var chance = Probability(2);\n  console.log(props);\n\n  if (chance == 0) {\n    return alert(\"Oops, better luck next time!\");\n  } else {\n    var promptNickname = prompt(\"Congratulations! You caught the Pokemon!\\nGive it a nickname: \");\n\n    if (promptNickname != null || promptNickname != \"\") {\n      console.log(promptNickname);\n      props.nickname = promptNickname;\n      caughtPokemons.push(props);\n      console.log(caughtPokemons);\n    }\n  }\n}\n\n_c2 = CatchPokemon;\n;\n\nfunction Pokemon(props) {\n  _s();\n\n  const [getDetails, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(GET_POKEMON_DETAILS, {\n    variables: {\n      \"name\": props.pokemon.name\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n\n  if (data) {\n    details = JSON.parse(JSON.stringify(data.pokemon));\n    details.image = props.pokemon.image;\n    console.log(details);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pokemon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: details.image,\n        alt: details.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", details.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Types: \", details.types.map(t => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [t.type.name, \", \"]\n          }, t.type.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Moves: \", details.moves.map(m => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [m.move.name, \", \"]\n          }, m.move.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: CatchPokemon.bind(this, details),\n        children: \"Catch Pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, details.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  console.log(data);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.pokemon.name, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.pokemon.image,\n        alt: \"pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getDetails(),\n      children: \"See Pokemon Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, props.pokemon.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Pokemon, \"/SyOo3AGHd4V9FiFDO50Lw8g6ts=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c3 = Pokemon;\n;\nexport default Pokemon;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Probability\");\n$RefreshReg$(_c2, \"CatchPokemon\");\n$RefreshReg$(_c3, \"Pokemon\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/Pokemon.js"],"names":["React","useLazyQuery","GET_POKEMON_DETAILS","details","caughtPokemons","Probability","n","Math","floor","random","CatchPokemon","props","chance","console","log","alert","promptNickname","prompt","nickname","push","Pokemon","getDetails","loading","error","data","variables","pokemon","name","JSON","parse","stringify","image","types","map","t","type","moves","m","move","bind","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,mBAAT,QAAoC,yBAApC;;AAEA,OAAO,IAAIC,OAAJ;AACP,IAAIC,cAAc,GAAG,EAArB;;AAEA,SAASC,WAAT,CAAqBC,CAArB,EAAuB;AACnB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,CAAX,CAA3B,CAAP;AACH;;KAFQD,W;AAER;;AAED,SAASK,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,MAAIC,MAAM,GAAGP,WAAW,CAAC,CAAD,CAAxB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,MAAGC,MAAM,IAAE,CAAX,EAAa;AACT,WAAOG,KAAK,CAAC,8BAAD,CAAZ;AACH,GAFD,MAEM;AACF,QAAIC,cAAc,GAAGC,MAAM,CAAC,gEAAD,CAA3B;;AACA,QAAID,cAAc,IAAE,IAAhB,IAAwBA,cAAc,IAAE,EAA5C,EAA+C;AAC3CH,MAAAA,OAAO,CAACC,GAAR,CAAYE,cAAZ;AACAL,MAAAA,KAAK,CAACO,QAAN,GAAiBF,cAAjB;AACAZ,MAAAA,cAAc,CAACe,IAAf,CAAoBR,KAApB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYV,cAAZ;AACH;AACJ;AACJ;;MAdQM,Y;AAcR;;AAED,SAASU,OAAT,CAAiBT,KAAjB,EAAuB;AAAA;;AACnB,QAAM,CAACU,UAAD,EAAa;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAb,IAAyCvB,YAAY,CAACC,mBAAD,EAAsB;AAACuB,IAAAA,SAAS,EAAC;AAAC,cAAOd,KAAK,CAACe,OAAN,CAAcC;AAAtB;AAAX,GAAtB,CAA3D;AACA,MAAIL,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACX,MAAIC,IAAJ,EAAS;AACLrB,IAAAA,OAAO,GAAGyB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,IAAI,CAACE,OAApB,CAAX,CAAV;AACAvB,IAAAA,OAAO,CAAC4B,KAAR,GAAgBpB,KAAK,CAACe,OAAN,CAAcK,KAA9B;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,GAAG,EAAEA,OAAO,CAAC4B,KAAlB;AAAyB,QAAA,GAAG,EAAE5B,OAAO,CAACwB;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,6BAAUxB,OAAO,CAACwB,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,8BAAWxB,OAAO,CAAC6B,KAAR,CAAcC,GAAd,CAAmBC,CAAD,IAAO;AAChC,8BACI;AAAA,uBAAyBA,CAAC,CAACC,IAAF,CAAOR,IAAhC;AAAA,aAAWO,CAAC,CAACC,IAAF,CAAOR,IAAlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJU,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI;AAAA,8BAAWxB,OAAO,CAACiC,KAAR,CAAcH,GAAd,CAAmBI,CAAD,IAAO;AAChC,8BACI;AAAA,uBAAyBA,CAAC,CAACC,IAAF,CAAOX,IAAhC;AAAA,aAAWU,CAAC,CAACC,IAAF,CAAOX,IAAlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJU,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAcI;AAAQ,QAAA,OAAO,EAAEjB,YAAY,CAAC6B,IAAb,CAAkB,IAAlB,EAAwBpC,OAAxB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA,OAAUA,OAAO,CAACqC,EAAlB;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAED3B,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,sBACI;AAAA,4BACI;AAAA,iBACKA,KAAK,CAACe,OAAN,CAAcC,IADnB,oBACyB;AAAK,QAAA,GAAG,EAAEhB,KAAK,CAACe,OAAN,CAAcK,KAAxB;AAA+B,QAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAMV,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,KAAUV,KAAK,CAACe,OAAN,CAAcC,IAAxB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAvCQP,O;UAC0CnB,Y;;;MAD1CmB,O;AAuCR;AACD,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_POKEMON_DETAILS } from './graphql/graphqlScript';\n\nexport var details;\nvar caughtPokemons = [];\n\nfunction Probability(n){\n    return Math.floor(Math.random() * Math.floor(n));\n};\n\nfunction CatchPokemon(props){\n    var chance = Probability(2);\n    console.log(props);\n    if(chance==0){\n        return alert(\"Oops, better luck next time!\");\n    } else{\n        var promptNickname = prompt(\"Congratulations! You caught the Pokemon!\\nGive it a nickname: \");\n        if (promptNickname!=null || promptNickname!=\"\"){\n            console.log(promptNickname);\n            props.nickname = promptNickname;\n            caughtPokemons.push(props);\n            console.log(caughtPokemons);\n        }\n    }\n};\n\nfunction Pokemon(props){\n    const [getDetails, { loading, error, data }] = useLazyQuery(GET_POKEMON_DETAILS, {variables:{\"name\":props.pokemon.name}});\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    if (data){\n        details = JSON.parse(JSON.stringify(data.pokemon));\n        details.image = props.pokemon.image;\n        console.log(details);\n        return(\n            <div key={details.id}>\n                <h2>Pokemon Details</h2>\n                <img src={details.image} alt={details.name}/>\n                <p>Name: {details.name}</p>\n                <p>Types: {details.types.map((t) => {\n                    return(\n                        <span key={t.type.name}>{t.type.name}, </span>\n                    );\n                })}</p>\n                <p>Moves: {details.moves.map((m) => {\n                    return(\n                        <span key={m.move.name}>{m.move.name}, </span>\n                    );\n                })}</p>\n                <button onClick={CatchPokemon.bind(this, details)}>Catch Pokemon</button>\n            </div>\n        );\n    }\n    \n    console.log(data);\n    console.log(props);\n\n    return(\n        <div key={props.pokemon.name}>\n            <p>\n                {props.pokemon.name} <img src={props.pokemon.image} alt=\"pokemon\"></img>\n            </p>\n            <button onClick={() => getDetails()}>See Pokemon Details</button>\n        </div>\n    );\n};\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}