{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/App.js\";\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport { ApolloProvider } from 'react-apollo';\nimport Courses from './Courses';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: \"https://graphql-pokeapi.vercel.app/api/graphql\",\n  cache: new InMemoryCache()\n});\nclient.query({\n  query: gql`\n    query pokemons($limit: Int, $offset: Int) {\n      pokemons(limit: $limit, offset: $offset) {\n        count\n        next\n        previous\n        status\n        message\n        results {\n          url\n          name\n          image\n        }\n      }\n    }\n  `\n}).then(result => console.log(result));\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/App.js"],"names":["ApolloClient","InMemoryCache","gql","ApolloProvider","Courses","client","uri","cache","query","then","result","console","log","App"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,WAAP;;AAEA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE,gDADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf;AAKAI,MAAM,CAACG,KAAP,CAAa;AACXA,EAAAA,KAAK,EAAEN,GAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBa,CAAb,EAiBCO,IAjBD,CAiBMC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAjBhB;;AAmBA,SAASG,GAAT,GAAe;AACb,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KAJQA,G;AAMT,eAAeA,GAAf","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport { ApolloProvider } from 'react-apollo';\nimport Courses from './Courses';\nimport './App.css';\n\nconst client = new ApolloClient({\n  uri: \"https://graphql-pokeapi.vercel.app/api/graphql\",\n  cache: new InMemoryCache()\n});\n\nclient.query({\n  query: gql`\n    query pokemons($limit: Int, $offset: Int) {\n      pokemons(limit: $limit, offset: $offset) {\n        count\n        next\n        previous\n        status\n        message\n        results {\n          url\n          name\n          image\n        }\n      }\n    }\n  `})\n.then(result => console.log(result));\n\nfunction App() {\n  return (\n    <h1>Hello</h1>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}