{"ast":null,"code":"import React from'react';import{Button}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var caughtPokemons=[];//Initialise empty list of caught pokemons\nfunction Probability(n){//Random number generator\nreturn Math.floor(Math.random()*Math.floor(n));};function CatchPokemon(pokemon){//Catch Pokemon function\nvar chance=Probability(2);//Generate random number between 0 and 1 for the 50% chance of catching a pokemon\nvar pokemonsList=JSON.parse(window.localStorage.getItem(\"myPokemons\"));//Get list of caught pokemon\nvar existingNicknames=[];pokemonsList.map(function(p){return existingNicknames.push(p.nickname);});//Get all existing nicknames and put in an array\nif(chance==0){//If Probability returns 0, pokemon is not caught \nreturn alert(\"Oops, better luck next time!\");}else{var promptNickname=prompt(\"Congratulations! You caught the Pokemon!\\nGive it a nickname: \");if(promptNickname!=null&&promptNickname!=\"\"){if(existingNicknames.includes(promptNickname)){//Check if nickname is already used\nalert(\"Nickname already used, please use another nickname\");}else{pokemon.nickname=promptNickname;//Add nickname given by user to the pokemon info provided by API\nif(pokemonsList!=null){//Check if there is already an existing list of caught pokemons\npokemonsList.push(pokemon);//Add the newly caught pokemon to the list\nwindow.localStorage.setItem('myPokemons',JSON.stringify(pokemonsList));//Update list\n}else{caughtPokemons.push(pokemon);window.localStorage.setItem('myPokemons',JSON.stringify(caughtPokemons));}}}}};function PokemonDetails(props){//Component\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'3%',paddingTop:'0'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pokemon Details\"}),/*#__PURE__*/_jsx(\"img\",{src:props.pDetails.image,alt:props.pDetails.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Name: \",props.pDetails.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Types: \",props.pDetails.types.map(function(t){return/*#__PURE__*/_jsxs(\"span\",{children:[t.type.name,\", \"]},t.type.name);})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Moves: \",props.pDetails.moves.map(function(m){return/*#__PURE__*/_jsxs(\"span\",{children:[m.move.name,\", \"]},m.move.name);})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:CatchPokemon.bind(this,props.pDetails),children:\"Catch Pokemon\"})]});};export default PokemonDetails;","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/pokemon-app/src/components/PokemonDetails.js"],"names":["React","Button","caughtPokemons","Probability","n","Math","floor","random","CatchPokemon","pokemon","chance","pokemonsList","JSON","parse","window","localStorage","getItem","existingNicknames","map","p","push","nickname","alert","promptNickname","prompt","includes","setItem","stringify","PokemonDetails","props","textAlign","padding","paddingTop","pDetails","image","name","types","t","type","moves","m","move","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nvar caughtPokemons = []; //Initialise empty list of caught pokemons\n\nfunction Probability(n){ //Random number generator\n    return Math.floor(Math.random() * Math.floor(n));\n};\n\nfunction CatchPokemon(pokemon){ //Catch Pokemon function\n    var chance = Probability(2); //Generate random number between 0 and 1 for the 50% chance of catching a pokemon\n    var pokemonsList = JSON.parse(window.localStorage.getItem(\"myPokemons\")); //Get list of caught pokemon\n    var existingNicknames = [];\n    pokemonsList.map(p => existingNicknames.push(p.nickname)); //Get all existing nicknames and put in an array\n\n    if(chance==0){ //If Probability returns 0, pokemon is not caught \n        return alert(\"Oops, better luck next time!\");\n    } else{\n        var promptNickname = prompt(\"Congratulations! You caught the Pokemon!\\nGive it a nickname: \");\n        if (promptNickname!=null && promptNickname!=\"\"){\n            if(existingNicknames.includes(promptNickname)){ //Check if nickname is already used\n                alert(\"Nickname already used, please use another nickname\");\n            }else{\n                pokemon.nickname = promptNickname; //Add nickname given by user to the pokemon info provided by API\n\n                if(pokemonsList != null){ //Check if there is already an existing list of caught pokemons\n                    pokemonsList.push(pokemon); //Add the newly caught pokemon to the list\n                    window.localStorage.setItem('myPokemons', JSON.stringify(pokemonsList)); //Update list\n                }else{\n                    caughtPokemons.push(pokemon);\n                    window.localStorage.setItem('myPokemons', JSON.stringify(caughtPokemons));\n                }\n            } \n        }\n    }\n};\n\nfunction PokemonDetails(props){ //Component\n    return(\n        <div style={{ textAlign: 'center', padding: '3%', paddingTop: '0'}}>\n            <h1>Pokemon Details</h1>\n            <img src={props.pDetails.image} alt={props.pDetails.name}/>\n            <p>Name: {props.pDetails.name}</p>\n            <p>Types: {props.pDetails.types.map((t) => {\n                return(\n                    <span key={t.type.name}>{t.type.name}, </span>\n                );\n            })}</p>\n            <p>Moves: {props.pDetails.moves.map((m) => {\n                return(\n                    <span key={m.move.name}>{m.move.name}, </span>\n                );\n            })}</p>\n            <Button variant=\"primary\" onClick={CatchPokemon.bind(this, props.pDetails)}>Catch Pokemon</Button>\n        </div>\n    );\n};\n\nexport default PokemonDetails;"]},"metadata":{},"sourceType":"module"}