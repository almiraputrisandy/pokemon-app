{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/main.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_POKEMONS, GET_POKEMON_DETAILS } from './graphql/graphqlScript';\nimport { Pokemon } from './pokemonDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [active, setActive] = useState(\"pokeList\");\n\n  function GetPokemons() {\n    _s();\n\n    setActive(\"pokeList\");\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_POKEMONS);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 28\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 26\n    }, this);\n    console.log(data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.pokemons.results.map(pokemon => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: e => GetPokemonDetails(pokemon, e),\n        children: [pokemon.name, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.image,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 40\n        }, this)]\n      }, pokemon.url, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(GetPokemons, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  function GetPokemonDetails(props) {\n    setActive(\"pokeDetails\");\n    console.log(props); //const { loading, error, data } = useQuery(GET_POKEMON_DETAILS, {variables:props.pokemon.name});\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: active === \"pokeList\" && /*#__PURE__*/_jsxDEV(GetPokemons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 39\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Main, \"lXTqkmEE2XQkh66+uGV3VDyYrqs=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/main.js"],"names":["React","useState","useQuery","GET_POKEMONS","GET_POKEMON_DETAILS","Pokemon","Main","active","setActive","GetPokemons","loading","error","data","console","log","pokemons","results","map","pokemon","e","GetPokemonDetails","name","image","url","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,yBAAlD;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AAAA;;AACX,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,UAAD,CAApC;;AACA,WAASQ,WAAT,GAAsB;AAAA;;AAClBD,IAAAA,SAAS,CAAC,UAAD,CAAT;AACA,UAAM;AAAEE,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA2BV,QAAQ,CAACC,YAAD,CAAzC;AACA,QAAGO,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACZ,QAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,wBACI;AAAA,gBACKA,IAAI,CAACG,QAAL,CAAcC,OAAd,CAAsBC,GAAtB,CAA0BC,OAAO,iBAC9B;AAAqB,QAAA,OAAO,EAAGC,CAAD,IAAOC,iBAAiB,CAACF,OAAD,EAAUC,CAAV,CAAtD;AAAA,mBACKD,OAAO,CAACG,IADb,oBACmB;AAAK,UAAA,GAAG,EAAEH,OAAO,CAACI,KAAlB;AAAyB,UAAA,GAAG,EAAEJ,OAAO,CAACG;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADnB;AAAA,SAAQH,OAAO,CAACK,GAAhB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAjBU,KAEFd,WAFE;AAAA,YAI0BP,QAJ1B;AAAA;;AAmBX,WAASkB,iBAAT,CAA2BI,KAA3B,EAAiC;AAC7BhB,IAAAA,SAAS,CAAC,aAAD,CAAT;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ,EAF6B,CAG7B;AACH;;AACD,sBACI;AAAA,cACKjB,MAAM,KAAK,UAAX,iBAAyB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAD9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IA7BQD,I;;KAAAA,I;AA+BT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_POKEMONS, GET_POKEMON_DETAILS } from './graphql/graphqlScript';\nimport { Pokemon } from './pokemonDetails';\n\nfunction Main(){\n    const [active, setActive] = useState(\"pokeList\");\n    function GetPokemons(){\n        setActive(\"pokeList\");\n        const { loading, error, data } = useQuery(GET_POKEMONS);\n        if(loading) return <p>Loading...</p>\n        if(error) return <p>Error :(</p>\n        console.log(data);\n        return (\n            <div>\n                {data.pokemons.results.map(pokemon => (\n                    <p key={pokemon.url} onClick={(e) => GetPokemonDetails(pokemon, e)}>\n                        {pokemon.name} <img src={pokemon.image} alt={pokemon.name}></img>\n                    </p>\n                ))}\n            </div>\n        );\n    }\n\n    function GetPokemonDetails(props){\n        setActive(\"pokeDetails\");\n        console.log(props);\n        //const { loading, error, data } = useQuery(GET_POKEMON_DETAILS, {variables:props.pokemon.name});\n    }\n    return(\n        <div>\n            {active === \"pokeList\" && <GetPokemons/>}\n        </div>\n    );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}