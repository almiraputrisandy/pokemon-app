{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/Pokemons.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport Pokemon from './Pokemon';\nimport { GET_POKEMONS } from './graphql/graphqlScript';\nimport { Card, CardDeck } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pokemons() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POKEMONS); //Execute get pokemons list\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(CardDeck, {\n    children: data.pokemons.results.map(currentPokemon =>\n    /*#__PURE__*/\n    //For every pokemon in the list\n    _jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Pokemon, {\n        pokemon: currentPokemon\n      }, currentPokemon.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), \" //Output Pokemon object\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pokemons, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Pokemons;\nexport default Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/Pokemons.js"],"names":["React","useQuery","Pokemon","GET_POKEMONS","Card","CardDeck","Pokemons","loading","error","data","pokemons","results","map","currentPokemon","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAQC,OAAR,MAAsB,WAAtB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACE,YAAD,CAAzC,CADkB,CACuC;;AAEzD,MAAII,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE,QAAC,QAAD;AAAA,cACGC,IAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBC,GAAtB,CAA2BC,cAAD;AAAA;AAAsB;AAC/C,YAAC,IAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA;AAAlB,SAAuCA,cAAc,CAACC,GAAtD;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAhBQR,Q;UAC0BL,Q;;;KAD1BK,Q;AAkBT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport  Pokemon  from './Pokemon';\nimport { GET_POKEMONS } from './graphql/graphqlScript';\nimport { Card, CardDeck } from 'react-bootstrap';\n\nfunction Pokemons() {\n  const { loading, error, data } = useQuery(GET_POKEMONS); //Execute get pokemons list\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <CardDeck>\n      {data.pokemons.results.map((currentPokemon) => ( //For every pokemon in the list\n        <Card>\n          <Pokemon pokemon={currentPokemon} key={currentPokemon.url}/> //Output Pokemon object\n        </Card>\n      ))}\n    </CardDeck>\n  );\n\n}\n\nexport default Pokemons;"]},"metadata":{},"sourceType":"module"}