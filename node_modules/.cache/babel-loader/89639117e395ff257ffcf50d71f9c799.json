{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/main.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_POKEMONS, GET_POKEMON_DETAILS } from './graphql/graphqlScript';\nimport Pokemon, { details } from './pokemonDetails';\nimport Pokemons from './pokemonList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PokemonDetails(props) {\n  _s();\n\n  const setActive = useState(\"pokeDetails\");\n  console.log(props);\n  setActive(\"pokeDetails\");\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this) // <div>\n  //     <h2>Pokemon Details</h2>\n  //     <p>\n  //         {props.name} <img src={props.image} alt={props.name}></img>\n  //     </p>\n  // </div>\n  ; //const { loading, error, data } = useQuery(GET_POKEMON_DETAILS, {variables:{\"name\":props.name}});\n  //console.log(data);\n}\n\n_s(PokemonDetails, \"hTSeLkxHchcBBlqly2gPL1h7gmk=\");\n\n_c = PokemonDetails;\n\nfunction Main() {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const [active, setActive] = useState(\"pokeList\");\n\n  function GetPokemons() {\n    _s2();\n\n    setActive(\"pokeList\");\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_POKEMON_DETAILS);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 28\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this);\n    console.log(data); // return (\n    //     <div>\n    //         {data.pokemons.results.map(pokemon => (\n    //             <p key={pokemon.url} onClick={(e) => PokemonDetails(pokemon, e)}>\n    //                 {pokemon.name} <img src={pokemon.image} alt={pokemon.name}></img>\n    //             </p>\n    //         ))}\n    //     </div>\n    // );\n\n    return data.pokemons.results.map(currentPokemon => /*#__PURE__*/_jsxDEV(Pokemon, {\n      pokemon: currentPokemon\n    }, currentPokemon.url, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this));\n  }\n\n  _s2(GetPokemons, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: active === \"pokeList\" && /*#__PURE__*/_jsxDEV(Pokemons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 39\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(Main, \"lXTqkmEE2XQkh66+uGV3VDyYrqs=\");\n\n_c2 = Main;\nexport default Main;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PokemonDetails\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/main.js"],"names":["React","useState","useQuery","GET_POKEMONS","GET_POKEMON_DETAILS","Pokemon","details","Pokemons","PokemonDetails","props","setActive","console","log","Main","active","GetPokemons","loading","error","data","pokemons","results","map","currentPokemon","url"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,yBAAlD;AACA,OAAOC,OAAP,IAAkBC,OAAlB,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAAA;;AACjC,QAAMC,SAAS,GAAGT,QAAQ,CAAC,aAAD,CAA1B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAC,EAAAA,SAAS,CAAC,aAAD,CAAT;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AAPJ,GAJiC,CAajC;AACA;AACH;;GAfeF,c;;KAAAA,c;;AAiBhB,SAASK,IAAT,GAAe;AAAA;;AAAA;;AACX,QAAM,CAACC,MAAD,EAASJ,SAAT,IAAsBT,QAAQ,CAAC,UAAD,CAApC;;AACA,WAASc,WAAT,GAAsB;AAAA;;AAClBL,IAAAA,SAAS,CAAC,UAAD,CAAT;AACA,UAAM;AAAEM,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA2BhB,QAAQ,CAACE,mBAAD,CAAzC;AACA,QAAGY,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACZ,QAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EALkB,CAOlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAOA,IAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBC,GAAtB,CAA2BC,cAAD,iBAC7B,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB,OAAuCA,cAAc,CAACC,GAAtD;AAAA;AAAA;AAAA;AAAA,YADG,CAAP;AAGH;;AArBU,MAEFR,WAFE;AAAA,YAI0Bb,QAJ1B;AAAA;;AAwBX,sBACI;AAAA,cACKY,MAAM,KAAK,UAAX,iBAAyB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAD9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;IA9BQD,I;;MAAAA,I;AAgCT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_POKEMONS, GET_POKEMON_DETAILS } from './graphql/graphqlScript';\nimport Pokemon, { details } from './pokemonDetails';\nimport Pokemons from './pokemonList';\n\nexport function PokemonDetails(props){\n    const setActive = useState(\"pokeDetails\")\n    console.log(props)\n    setActive(\"pokeDetails\");\n    return(\n        <p>Hello</p>\n        // <div>\n        //     <h2>Pokemon Details</h2>\n        //     <p>\n        //         {props.name} <img src={props.image} alt={props.name}></img>\n        //     </p>\n        // </div>\n    );\n    //const { loading, error, data } = useQuery(GET_POKEMON_DETAILS, {variables:{\"name\":props.name}});\n    //console.log(data);\n}\n\nfunction Main(){\n    const [active, setActive] = useState(\"pokeList\");\n    function GetPokemons(){\n        setActive(\"pokeList\");\n        const { loading, error, data } = useQuery(GET_POKEMON_DETAILS);\n        if(loading) return <p>Loading...</p>\n        if(error) return <p>Error :(</p>\n        console.log(data);\n        \n        // return (\n        //     <div>\n        //         {data.pokemons.results.map(pokemon => (\n        //             <p key={pokemon.url} onClick={(e) => PokemonDetails(pokemon, e)}>\n        //                 {pokemon.name} <img src={pokemon.image} alt={pokemon.name}></img>\n        //             </p>\n        //         ))}\n        //     </div>\n        // );\n        return data.pokemons.results.map((currentPokemon) => (\n            <Pokemon pokemon={currentPokemon} key={currentPokemon.url}/>\n        ));\n    }\n\n    \n    return(\n        <div>\n            {active === \"pokeList\" && <Pokemons/>}\n            {/* {active === \"pokeDetails\" && <PokemonDetails/>} */}\n        </div>\n    );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}