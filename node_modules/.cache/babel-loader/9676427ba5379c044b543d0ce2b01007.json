{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/pokemonList.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client'; //import Pokemon from './pokemonDetails';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pokemons = gql`\nquery pokemons($limit: Int, $offset: Int) {\n  pokemons(limit: $limit, offset: $offset) {\n    count\n    next\n    previous\n    status\n    message\n    results {\n      url\n      name\n      image\n    }\n  }\n}\n`;\n\nfunction Pokemons({\n  onSelectedPokemon\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(pokemons);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  const details = gql`\n    query pokemon($name: String!) {\n      pokemon(name: $name) {\n        id\n        name\n        abilities {\n          ability {\n            name\n          }\n        }\n        moves {\n          move {\n            name\n          }\n        }\n        types {\n          type {\n            name\n          }\n        }\n        message\n        status\n      }\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onSelectedPokemon,\n    children: data.pokemons.results.map(pokemon => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [pokemon.name, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pokemon.image,\n        alt: \"pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 26\n      }, this)]\n    }, pokemon.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n\n  function PokemonDetails({\n    name\n  }) {\n    _s();\n\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(details, {\n      variables: {\n        name\n      }\n    });\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.pokemon.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.pokemon.abilities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(PokemonDetails, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  ; // return data.pokemons.results.map(({ url, name, image }) => (\n  //   <div key={name}>\n  //     <p>\n  //       {name} <img src={image} alt=\"pokemon\"></img> \n  //     </p>\n  //   </div>\n  // ));\n  // return data.pokemons.results.map((currentPokemon) => (\n  //   <Pokemon pokemon={currentPokemon} />\n  // ));\n}\n\n_s2(Pokemons, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Pokemons;\nexport default Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/pokemonList.js"],"names":["React","useQuery","gql","pokemons","Pokemons","onSelectedPokemon","loading","error","data","console","log","details","results","map","pokemon","name","image","PokemonDetails","variables","abilities"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B,C,CACA;;;AAEA,MAAMC,QAAQ,GAAGD,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;;AAiBA,SAASE,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAuC;AAAA;;AAAA;;AACrC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,QAAD,CAAzC;AAEA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,OAAO,GAAGT,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAxBE;AA0BA,sBACE;AAAK,IAAA,OAAO,EAAEG,iBAAd;AAAA,cACGG,IAAI,CAACL,QAAL,CAAcS,OAAd,CAAsBC,GAAtB,CAA0BC,OAAO,iBAChC;AAAA,iBACGA,OAAO,CAACC,IADX,oBACiB;AAAK,QAAA,GAAG,EAAED,OAAO,CAACE,KAAlB;AAAyB,QAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADjB;AAAA,OAAQF,OAAO,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,WAASE,cAAT,CAAwB;AAACF,IAAAA;AAAD,GAAxB,EAA+B;AAAA;;AAC7B,UAAM;AAAET,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA2BP,QAAQ,CAACU,OAAD,EAAU;AACjDO,MAAAA,SAAS,EAAG;AAACH,QAAAA;AAAD;AADqC,KAAV,CAAzC;AAGA,QAAIT,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEX,wBACE;AAAA,8BACE;AAAA,kBAAIC,IAAI,CAACM,OAAL,CAAaC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIP,IAAI,CAACM,OAAL,CAAaK;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAvDoC,KA0C5BF,cA1C4B;AAAA,YA2CFhB,QA3CE;AAAA;;AAuDpC,GAvDoC,CAyDrC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD;;IApEQG,Q;UAC0BH,Q;;;KAD1BG,Q;AAsET,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\n//import Pokemon from './pokemonDetails';\n\nconst pokemons = gql`\nquery pokemons($limit: Int, $offset: Int) {\n  pokemons(limit: $limit, offset: $offset) {\n    count\n    next\n    previous\n    status\n    message\n    results {\n      url\n      name\n      image\n    }\n  }\n}\n`;\n\nfunction Pokemons({onSelectedPokemon}) {\n  const { loading, error, data } = useQuery(pokemons);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  console.log(data);\n  const details = gql`\n    query pokemon($name: String!) {\n      pokemon(name: $name) {\n        id\n        name\n        abilities {\n          ability {\n            name\n          }\n        }\n        moves {\n          move {\n            name\n          }\n        }\n        types {\n          type {\n            name\n          }\n        }\n        message\n        status\n      }\n    }\n  `;\n\n  return (\n    <div onClick={onSelectedPokemon}>\n      {data.pokemons.results.map(pokemon => (\n        <p key={pokemon.name}>\n          {pokemon.name} <img src={pokemon.image} alt=\"pokemon\"></img>\n        </p>\n      ))}\n    </div>\n  );\n\n  function PokemonDetails({name}){\n    const { loading, error, data } = useQuery(details, {\n      variables : {name}, \n    });\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n  \n    return (\n      <div>\n        <p>{data.pokemon.name}</p>\n        <p>{data.pokemon.abilities}</p>\n      </div>\n    );\n  };\n\n  // return data.pokemons.results.map(({ url, name, image }) => (\n  //   <div key={name}>\n  //     <p>\n  //       {name} <img src={image} alt=\"pokemon\"></img> \n  //     </p>\n  //   </div>\n  // ));\n\n  // return data.pokemons.results.map((currentPokemon) => (\n  //   <Pokemon pokemon={currentPokemon} />\n  // ));\n}\n\nexport default Pokemons;"]},"metadata":{},"sourceType":"module"}