{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/pokemonList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client'; //import Pokemon from './pokemonDetails';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pokemons = gql`\nquery pokemons($limit: Int, $offset: Int) {\n  pokemons(limit: $limit, offset: $offset) {\n    count\n    next\n    previous\n    status\n    message\n    results {\n      url\n      name\n      image\n    }\n  }\n}\n`;\n\nfunction Pokemons() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(pokemons);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  console.log(data); // return data.pokemons.results.map(({ url, name, image }) => (\n  //   <div key={name}>\n  //     <p>\n  //       <a href={url}>\n  //         {name} <img src={image} alt=\"pokemon\"></img> \n  //       </a>\n  //     </p>\n  //   </div>\n  // ));\n\n  return data.pokemons.results.map(currentPokemon => /*#__PURE__*/_jsxDEV(Pokemon, {\n    pokemon: currentPokemon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n}\n\n_s(Pokemons, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Pokemons;\nexport default Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/pokemonList.js"],"names":["React","useQuery","gql","pokemons","Pokemons","loading","error","data","console","log","results","map","currentPokemon"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B,C,CACA;;;AAEA,MAAMC,QAAQ,GAAGD,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;;AAiBA,SAASE,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,QAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EALkB,CAMlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOA,IAAI,CAACJ,QAAL,CAAcO,OAAd,CAAsBC,GAAtB,CAA2BC,cAAD,iBAC/B,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAGD;;GAnBQR,Q;UAC0BH,Q;;;KAD1BG,Q;AAqBT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\n//import Pokemon from './pokemonDetails';\n\nconst pokemons = gql`\nquery pokemons($limit: Int, $offset: Int) {\n  pokemons(limit: $limit, offset: $offset) {\n    count\n    next\n    previous\n    status\n    message\n    results {\n      url\n      name\n      image\n    }\n  }\n}\n`;\n\nfunction Pokemons() {\n  const { loading, error, data } = useQuery(pokemons);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  console.log(data);\n  // return data.pokemons.results.map(({ url, name, image }) => (\n  //   <div key={name}>\n  //     <p>\n  //       <a href={url}>\n  //         {name} <img src={image} alt=\"pokemon\"></img> \n  //       </a>\n  //     </p>\n  //   </div>\n  // ));\n\n  return data.pokemons.results.map((currentPokemon) => (\n    <Pokemon pokemon={currentPokemon} />\n  ));\n}\n\nexport default Pokemons;"]},"metadata":{},"sourceType":"module"}