{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/Pokemon.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { GET_POKEMON_DETAILS } from './graphql/graphqlScript';\nimport { Button } from 'react-bootstrap';\nimport PokemonDetails from './PokemonDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar details;\nvar caughtPokemons = []; //Initialise empty list of caught pokemons\n\nfunction Probability(n) {\n  //Random number generator\n  return Math.floor(Math.random() * Math.floor(n));\n}\n\n_c = Probability;\n;\n\nfunction CatchPokemon(pokemon) {\n  //Catch Pokemon function\n  var chance = Probability(2); //Generate random number between 0 and 1 for the 50% chance of catching a pokemon\n\n  var pokemonsList = JSON.parse(window.localStorage.getItem(\"myPokemons\")); //Get list of caught pokemon\n\n  var existingNicknames = [];\n  pokemonsList.map(p => existingNicknames.push(p.nickname)); //Get all existing nicknames and put in an array\n\n  if (chance == 0) {\n    //If Probability returns 0, pokemon is not caught \n    return alert(\"Oops, better luck next time!\");\n  } else {\n    var promptNickname = prompt(\"Congratulations! You caught the Pokemon!\\nGive it a nickname: \");\n\n    if (promptNickname != null && promptNickname != \"\") {\n      if (existingNicknames.includes(promptNickname)) {\n        //Check if nickname is already used\n        alert(\"Nickname already used, please use another nickname\");\n      } else {\n        pokemon.nickname = promptNickname; //Add nickname given by user to the pokemon info provided by API\n\n        if (pokemonsList != null) {\n          //Check if there is already an existing list of caught pokemons\n          pokemonsList.push(pokemon); //Add the newly caught pokemon to the list\n\n          window.localStorage.setItem('myPokemons', JSON.stringify(pokemonsList)); //Update list\n        } else {\n          caughtPokemons.push(pokemon);\n          window.localStorage.setItem('myPokemons', JSON.stringify(caughtPokemons));\n        }\n      }\n    }\n  }\n}\n\n_c2 = CatchPokemon;\n;\n\nfunction Pokemon(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //Lazy Query to execute only after \"See Pokemon Details\" button is clicked\n  const [getDetails, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(GET_POKEMON_DETAILS, {\n    variables: {\n      \"name\": props.pokemon.name\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n\n  if (data) {\n    details = JSON.parse(JSON.stringify(data.pokemon));\n    details.image = props.pokemon.image;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '3%',\n        paddingTop: '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pokemon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: details.image,\n        alt: details.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", details.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Types: \", details.types.map(t => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [t.type.name, \", \"]\n          }, t.type.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Moves: \", details.moves.map(m => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [m.move.name, \", \"]\n          }, m.move.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: CatchPokemon.bind(this, details),\n        children: \"Catch Pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, details.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n  function GetDetails(name, image) {\n    _s();\n\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_POKEMON_DETAILS, {\n      variables: {\n        \"name\": name\n      }\n    });\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }, this);\n\n    if (data) {\n      details = JSON.parse(JSON.stringify(data.pokemon));\n      details.image = image;\n      return /*#__PURE__*/_jsxDEV(PokemonDetails, {\n        pDetails: details\n      }, details.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  _s(GetDetails, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '3%',\n      paddingTop: '0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [props.pokemon.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.pokemon.image,\n        alt: \"pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: GetDetails.bind(this, props.pokemon.name, props.pokemon.image),\n      children: \"See Pokemon Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, props.pokemon.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Pokemon, \"/SyOo3AGHd4V9FiFDO50Lw8g6ts=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c3 = Pokemon;\n;\nexport default Pokemon;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Probability\");\n$RefreshReg$(_c2, \"CatchPokemon\");\n$RefreshReg$(_c3, \"Pokemon\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/Pokemon.js"],"names":["React","useLazyQuery","useQuery","GET_POKEMON_DETAILS","Button","PokemonDetails","details","caughtPokemons","Probability","n","Math","floor","random","CatchPokemon","pokemon","chance","pokemonsList","JSON","parse","window","localStorage","getItem","existingNicknames","map","p","push","nickname","alert","promptNickname","prompt","includes","setItem","stringify","Pokemon","props","getDetails","loading","error","data","variables","name","image","textAlign","padding","paddingTop","types","t","type","moves","m","move","bind","id","GetDetails"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { GET_POKEMON_DETAILS } from './graphql/graphqlScript';\nimport { Button } from 'react-bootstrap';\nimport PokemonDetails from './PokemonDetails';\n\nvar details;\nvar caughtPokemons = []; //Initialise empty list of caught pokemons\n\nfunction Probability(n){ //Random number generator\n    return Math.floor(Math.random() * Math.floor(n));\n};\n\nfunction CatchPokemon(pokemon){ //Catch Pokemon function\n    var chance = Probability(2); //Generate random number between 0 and 1 for the 50% chance of catching a pokemon\n    var pokemonsList = JSON.parse(window.localStorage.getItem(\"myPokemons\")); //Get list of caught pokemon\n    var existingNicknames = [];\n    pokemonsList.map(p => existingNicknames.push(p.nickname)); //Get all existing nicknames and put in an array\n\n    if(chance==0){ //If Probability returns 0, pokemon is not caught \n        return alert(\"Oops, better luck next time!\");\n    } else{\n        var promptNickname = prompt(\"Congratulations! You caught the Pokemon!\\nGive it a nickname: \");\n        if (promptNickname!=null && promptNickname!=\"\"){\n            if(existingNicknames.includes(promptNickname)){ //Check if nickname is already used\n                alert(\"Nickname already used, please use another nickname\");\n            }else{\n                pokemon.nickname = promptNickname; //Add nickname given by user to the pokemon info provided by API\n\n                if(pokemonsList != null){ //Check if there is already an existing list of caught pokemons\n                    pokemonsList.push(pokemon); //Add the newly caught pokemon to the list\n                    window.localStorage.setItem('myPokemons', JSON.stringify(pokemonsList)); //Update list\n                }else{\n                    caughtPokemons.push(pokemon);\n                    window.localStorage.setItem('myPokemons', JSON.stringify(caughtPokemons));\n                }\n            } \n        }\n    }\n};\n\nfunction Pokemon(props){\n    //Lazy Query to execute only after \"See Pokemon Details\" button is clicked\n    const [getDetails, { loading, error, data }] = useLazyQuery(GET_POKEMON_DETAILS, {variables:{\"name\":props.pokemon.name}});\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    if (data){\n        details = JSON.parse(JSON.stringify(data.pokemon));\n        details.image = props.pokemon.image;\n        return(\n            <div key={details.id} style={{ textAlign: 'center', padding: '3%', paddingTop: '0'}}>\n                <h1>Pokemon Details</h1>\n                <img src={details.image} alt={details.name}/>\n                <p>Name: {details.name}</p>\n                <p>Types: {details.types.map((t) => {\n                    return(\n                        <span key={t.type.name}>{t.type.name}, </span>\n                    );\n                })}</p>\n                <p>Moves: {details.moves.map((m) => {\n                    return(\n                        <span key={m.move.name}>{m.move.name}, </span>\n                    );\n                })}</p>\n                <Button variant=\"primary\" onClick={CatchPokemon.bind(this, details)}>Catch Pokemon</Button>\n            </div>\n        );\n    }\n\n    function GetDetails(name, image){\n        const { loading, error, data } = useQuery(GET_POKEMON_DETAILS, {variables:{\"name\":name}});\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error :(</p>;\n        if (data){\n            details = JSON.parse(JSON.stringify(data.pokemon));\n            details.image = image;\n            return(\n                <PokemonDetails pDetails={details} key={details.id}/>\n            );\n        }    \n    }\n\n    return(\n        <div key={props.pokemon.name} style={{ textAlign: 'center', padding: '3%', paddingTop: '0'}}>\n            <h1>\n                {props.pokemon.name} <br/><img src={props.pokemon.image} alt=\"pokemon\"></img>\n            </h1>\n            <Button variant=\"primary\" onClick={GetDetails.bind(this, props.pokemon.name, props.pokemon.image)}>See Pokemon Details</Button>\n        </div>\n    );\n};\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}