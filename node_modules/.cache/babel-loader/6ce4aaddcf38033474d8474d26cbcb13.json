{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_POKEMON_DETAILS } from './graphql/graphqlScript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var details;\nvar caughtPokemons = [];\n\nfunction Probability(n) {\n  return Math.floor(Math.random() * Math.floor(n));\n}\n\n_c = Probability;\n;\n\nfunction CatchPokemon(pokemon) {\n  var chance = Probability(2);\n  console.log(pokemon);\n\n  if (chance == 0) {\n    return alert(\"Oops, better luck next time!\");\n  } else {\n    var promptNickname = prompt(\"Congratulations! You caught the Pokemon!\\nGive it a nickname: \");\n\n    if (promptNickname != null || promptNickname != \"\") {\n      console.log(promptNickname);\n      pokemon.nickname = promptNickname; //caughtPokemons.push(pokemon);\n\n      if (JSON.parse(window.localStorage.getItem('myPokemons')) != null) {\n        var array = JSON.parse(window.localStorage.getItem('myPokemons'));\n        console.log(array);\n        array.push(caughtPokemons[caughtPokemons.length - 1]);\n        window.localStorage.setItem('myPokemons', JSON.stringify(array));\n      } else {\n        caughtPokemons.push(pokemon);\n        window.localStorage.setItem('myPokemons', JSON.stringify(caughtPokemons));\n      }\n\n      console.log(caughtPokemons);\n    }\n  }\n}\n\n_c2 = CatchPokemon;\n;\n\nfunction Pokemon(props) {\n  _s();\n\n  //localStorage.clear();\n  //console.log(window.localStorage.getItem('myPokemons'));\n  const [getDetails, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(GET_POKEMON_DETAILS, {\n    variables: {\n      \"name\": props.pokemon.name\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n\n  if (data) {\n    details = JSON.parse(JSON.stringify(data.pokemon));\n    details.image = props.pokemon.image;\n    console.log(details);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pokemon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: details.image,\n        alt: details.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", details.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Types: \", details.types.map(t => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [t.type.name, \", \"]\n          }, t.type.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Moves: \", details.moves.map(m => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [m.move.name, \", \"]\n          }, m.move.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: CatchPokemon.bind(this, details),\n        children: \"Catch Pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, details.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n  console.log(data);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [props.pokemon.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.pokemon.image,\n        alt: \"pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getDetails(),\n      children: \"See Pokemon Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, props.pokemon.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Pokemon, \"/SyOo3AGHd4V9FiFDO50Lw8g6ts=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c3 = Pokemon;\n;\nexport default Pokemon;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Probability\");\n$RefreshReg$(_c2, \"CatchPokemon\");\n$RefreshReg$(_c3, \"Pokemon\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/Pokemon.js"],"names":["React","useLazyQuery","GET_POKEMON_DETAILS","details","caughtPokemons","Probability","n","Math","floor","random","CatchPokemon","pokemon","chance","console","log","alert","promptNickname","prompt","nickname","JSON","parse","window","localStorage","getItem","array","push","length","setItem","stringify","Pokemon","props","getDetails","loading","error","data","variables","name","image","types","map","t","type","moves","m","move","bind","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_POKEMON_DETAILS } from './graphql/graphqlScript';\n\nexport var details;\nvar caughtPokemons = [];\n\nfunction Probability(n){\n    return Math.floor(Math.random() * Math.floor(n));\n};\n\nfunction CatchPokemon(pokemon){\n    var chance = Probability(2);\n    console.log(pokemon);\n    if(chance==0){\n        return alert(\"Oops, better luck next time!\");\n    } else{\n        var promptNickname = prompt(\"Congratulations! You caught the Pokemon!\\nGive it a nickname: \");\n        if (promptNickname!=null || promptNickname!=\"\"){\n            console.log(promptNickname);\n            pokemon.nickname = promptNickname;\n            //caughtPokemons.push(pokemon);\n\n            if(JSON.parse(window.localStorage.getItem('myPokemons')) != null){\n                var array = JSON.parse(window.localStorage.getItem('myPokemons'));\n                console.log(array);\n                array.push(caughtPokemons[caughtPokemons.length-1]);\n                window.localStorage.setItem('myPokemons', JSON.stringify(array));\n            }else{\n                caughtPokemons.push(pokemon);\n                window.localStorage.setItem('myPokemons', JSON.stringify(caughtPokemons));\n            }\n            console.log(caughtPokemons);\n        }\n    }\n};\n\nfunction Pokemon(props){\n    //localStorage.clear();\n    //console.log(window.localStorage.getItem('myPokemons'));\n    const [getDetails, { loading, error, data }] = useLazyQuery(GET_POKEMON_DETAILS, {variables:{\"name\":props.pokemon.name}});\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    if (data){\n        details = JSON.parse(JSON.stringify(data.pokemon));\n        details.image = props.pokemon.image;\n        console.log(details);\n        return(\n            <div key={details.id}>\n                <h1>Pokemon Details</h1>\n                <img src={details.image} alt={details.name}/>\n                <p>Name: {details.name}</p>\n                <p>Types: {details.types.map((t) => {\n                    return(\n                        <span key={t.type.name}>{t.type.name}, </span>\n                    );\n                })}</p>\n                <p>Moves: {details.moves.map((m) => {\n                    return(\n                        <span key={m.move.name}>{m.move.name}, </span>\n                    );\n                })}</p>\n                <button onClick={CatchPokemon.bind(this, details)}>Catch Pokemon</button>\n            </div>\n        );\n    }\n    \n    console.log(data);\n    console.log(props);\n\n    return(\n        <div key={props.pokemon.name}>\n            <h1>\n                {props.pokemon.name} <br/><img src={props.pokemon.image} alt=\"pokemon\"></img>\n            </h1>\n            <button onClick={() => getDetails()}>See Pokemon Details</button>\n        </div>\n    );\n};\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}