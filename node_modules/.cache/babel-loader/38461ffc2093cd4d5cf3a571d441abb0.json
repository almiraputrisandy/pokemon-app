{"ast":null,"code":"var _jsxFileName = \"/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/pokemonDetails.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst details = gql`\n    query pokemon($name: String!) {\n      pokemon(name: $name) {\n        id\n        name\n        abilities {\n          ability {\n            name\n          }\n        }\n        moves {\n          move {\n            name\n          }\n        }\n        types {\n          type {\n            name\n          }\n        }\n        message\n        status\n      }\n    }\n  `;\n\nfunction PokemonDetails({\n  name\n}) {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(details, {\n    variables: {\n      name\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  return console.log(data) // <div>\n  //   <p>{data.pokemon.name}</p>\n  //   <p>{data.pokemon.abilities}</p>\n  // </div>\n  ;\n}\n\n_s(PokemonDetails, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = PokemonDetails;\n;\n\nfunction Pokemon(props) {\n  _s2();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(details, {\n    variables: `${props.name}`\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  console.log(data);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.pokemon.name, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.pokemon.image,\n        alt: \"pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, props.pokemon.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Pokemon, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Pokemon;\n;\nexport default Pokemon;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PokemonDetails\");\n$RefreshReg$(_c2, \"Pokemon\");","map":{"version":3,"sources":["/Users/almiraputrisandy/Desktop/GitHub Repositories/test-app/src/pokemonDetails.js"],"names":["React","useQuery","gql","details","PokemonDetails","name","loading","error","data","variables","console","log","Pokemon","props","pokemon","image"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,OAAO,GAAGD,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAxBA;;AA0BE,SAASE,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAA+B;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,OAAD,EAAU;AACjDM,IAAAA,SAAS,EAAG;AAACJ,MAAAA;AAAD;AADqC,GAAV,CAAzC;AAGA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,SACEG,OAAO,CAACC,GAAR,CAAYH,IAAZ,CADF,CAEE;AACA;AACA;AACA;AALF;AAOD;;GAdQJ,c;UAC0BH,Q;;;KAD1BG,c;AAcR;;AAEH,SAASQ,OAAT,CAAiBC,KAAjB,EAAuB;AAAA;;AACnB,QAAM;AAAEP,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,OAAD,EAAU;AAACM,IAAAA,SAAS,EAAE,GAAEI,KAAK,CAACR,IAAK;AAAzB,GAAV,CAAzC;AACA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,sBACI;AAAA,2BACI;AAAA,iBACKA,KAAK,CAACC,OAAN,CAAcT,IADnB,oBACyB;AAAK,QAAA,GAAG,EAAEQ,KAAK,CAACC,OAAN,CAAcC,KAAxB;AAA+B,QAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUF,KAAK,CAACC,OAAN,CAAcT,IAAxB;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IAbQO,O;UAC4BX,Q;;;MAD5BW,O;AAaR;AACD,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\n\nconst details = gql`\n    query pokemon($name: String!) {\n      pokemon(name: $name) {\n        id\n        name\n        abilities {\n          ability {\n            name\n          }\n        }\n        moves {\n          move {\n            name\n          }\n        }\n        types {\n          type {\n            name\n          }\n        }\n        message\n        status\n      }\n    }\n  `;\n\n  function PokemonDetails({name}){\n    const { loading, error, data } = useQuery(details, {\n      variables : {name}, \n    });\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n  \n    return (\n      console.log(data)\n      // <div>\n      //   <p>{data.pokemon.name}</p>\n      //   <p>{data.pokemon.abilities}</p>\n      // </div>\n    );\n  };\n\nfunction Pokemon(props){\n    const { loading, error, data } = useQuery(details, {variables:`${props.name}`});\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.log(data);\n    console.log(props);\n    return(\n        <div key={props.pokemon.name}>\n            <p>\n                {props.pokemon.name} <img src={props.pokemon.image} alt=\"pokemon\"></img>\n            </p>\n        </div>\n    );\n};\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}